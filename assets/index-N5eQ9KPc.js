import{r as i,j as e}from"./index-xD0Ioiph.js";function E({title:a,description:s,id:l,onDelete:p,onUpdate:x}){const[d,t]=i.useState(!1),[u,m]=i.useState(a||""),[h,c]=i.useState(s||"");i.useEffect(()=>{m(a),c(s)},[a,s]);const g=()=>{u.trim()!==""&&h.trim()!==""&&(x(l,{title:u,description:h}),t(!1))};return e.jsx(e.Fragment,{children:e.jsxs("div",{className:"task",children:[e.jsxs("div",{className:"info",children:[e.jsx("h3",{children:a}),e.jsx("p",{children:s})]}),e.jsxs("div",{className:"buttons",children:[e.jsx("button",{className:"button",onClick:()=>p(l),children:"🗑️ Delete"}),e.jsx("button",{className:"button",onClick:()=>t(!0),children:"Update"})]}),d&&e.jsx("div",{className:"modal",children:e.jsxs("div",{className:"modal-content",children:[e.jsx("h3",{children:"Task Edit"}),e.jsx("input",{type:"text",value:u,onChange:j=>m(j.target.value)}),e.jsx("textarea",{value:h,onChange:j=>c(j.target.value)}),e.jsxs("div",{className:"modal-buttons",children:[e.jsx("button",{onClick:g,children:"Save"}),e.jsx("button",{onClick:()=>t(!1),children:"Cancel"})]})]})})]})})}function w({title:a,description:s,setTitle:l,setDescription:p,addTask:x}){const d=t=>{t.preventDefault(),x()};return e.jsx(e.Fragment,{children:e.jsxs("form",{className:"form",onSubmit:d,children:[e.jsx("input",{type:"text",placeholder:"Title",value:a,onChange:t=>l(t.target.value)}),e.jsx("input",{type:"text",placeholder:"Description",value:s,onChange:t=>p(t.target.value)}),e.jsx("button",{onClick:d,children:"Post"})]})})}const k="https://cruc.vercel.app/api/tasks",y=()=>{const[a,s]=i.useState([]),[l,p]=i.useState(!0),[x,d]=i.useState(null),[t,u]=i.useState(""),[m,h]=i.useState("");return i.useEffect(()=>{(async()=>{try{const r=await fetch(k);if(!r.ok)throw new Error(`Response status: ${r.status}`);const o=await r.json();s(o)}catch(r){d(r.message)}finally{p(!1)}})()},[]),{data:a,loading:l,error:x,title:t,description:m,setTitle:u,setDescription:h,addTask:async()=>{if(t)try{const n=await fetch(`${k}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,description:m})});if(!n.ok)throw new Error("Error to post task");const r=await n.json();s(o=>o.some(f=>f._id===r._id)?o:[...o,r]),u(""),h("")}catch(n){console.log("Error:",n)}},deleteTask:async n=>{try{if(!(await fetch(`${k}/${n}`,{method:"DELETE"})).ok)throw new Error("Error al eliminar la tarea");s(o=>o.filter(T=>T._id!==n))}catch(r){console.error("Error:",r)}},updateTask:async(n,r)=>{try{if(!(await fetch(`${k}/${n}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})).ok)throw new Error("Error al actualizar la tarea");s(T=>T.map(f=>f._id===n?{...f,...r}:f))}catch(o){console.error("Error",o.message)}}}};function N(){const{data:a,error:s,loading:l,title:p,description:x,addTask:d,deleteTask:t,updateTask:u,setDescription:m,setTitle:h}=y();return l?e.jsx("p",{children:"Loading..."}):s?e.jsxs("p",{children:["Error: ",s]}):e.jsx(e.Fragment,{children:e.jsxs("div",{className:"section-tasks",children:[e.jsx(w,{title:p,description:x,setTitle:h,setDescription:m,addTask:d}),e.jsx("div",{className:"tasks",children:a.length===0?e.jsx("p",{className:"dtask",children:"No hay tareas disponibles"}):a.slice().reverse().map(c=>c&&e.jsx(E,{title:c.title,description:c.description,id:c._id,onDelete:t,onUpdate:u},c._id))})]})})}export{N as default};
